{"version":3,"sources":["AddItem.js","ItemsCount.js","TaskBox.js","App.js","index.js"],"names":["AddItem","state","newTaskText","updateTaskText","event","setState","target","value","handleClick","e","preventDefault","alert","props","addTaskFunc","className","type","placeholder","this","onChange","maxLength","onClick","React","Component","ItemsCount","completedTask","incompletedTask","completed","id","count","TaskBox","handleDelete","deleteTaskFunc","handleCheck","checkTaskFunc","handleUndo","undoTaskFunc","text","App","tasks","addTask","newTask","taskText","axios","post","then","response","taskId","data","insertId","tasksCopy","slice","push","catch","error","console","log","deleteTask","delete","filterTask","filter","task","checkTask","checkTasks","selectedTask","forEach","put","undoTask","undoTasks","get","completedTasks","incompleteTasks","countCompleted","length","countIncompleted","map","itemIn","key","itemCo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ea17a10.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AddItem extends React.Component {\n  state = {\n    newTaskText: \"\"\n  }\n  updateTaskText = (event) => {\n    this.setState({\n      newTaskText: event.target.value\n    });\n  }\n  handleClick = (e) => {\n    e.preventDefault();\n    if(this.state.newTaskText === \"\"){\n      alert(\"Please add a task first\");\n    }else{\n      this.props.addTaskFunc(this.state.newTaskText);\n      this.setState({\n        newTaskText: \"\" \n      });\n    }\n  }\n  render() {\n    return (\n      <section className=\"container\">\n        <form className=\"form-inline justify-content-center\">\n          <input \n            type=\"text\" \n            className=\"col-6 form-control mr-2\" \n            placeholder=\"New task\"\n            value={this.state.newTaskText}\n            onChange={this.updateTaskText}\n            maxLength=\"70\"\n          />\n          <button className=\"btn btn-sm btn-primary\" onClick={this.handleClick}>\n            ADD\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddItem;","import React from \"react\";\nimport \"./TaskBox.css\";\n\nclass ItemsCount extends React.Component {\n  completedTask = 0;\n  incompletedTask = 0;\n  render() {\n    return (\n      <div>\n        {this.props.completed ? <h4 id=\"title-container\"><i>You have completed {this.props.count} task</i></h4> : <h4 id=\"title-container\"><i>You have {this.props.count} incomplete task</i></h4>}\n      </div>\n    );\n  }\n}\n\nexport default ItemsCount;","import React from \"react\";\nimport \"./TaskBox.css\";\n\nclass TaskBox extends React.Component {\n  handleDelete = e => {\n    this.props.deleteTaskFunc(this.props.id);\n  }\n  handleCheck = e => {\n    this.props.checkTaskFunc(this.props.id);\n  }\n  handleUndo = e => {\n    this.props.undoTaskFunc(this.props.id);\n  }\n  render() {\n    return (\n      <div className={`col-md-3 card box ${this.props.completed ? \"completed-box\" : \"incompleted-box\"}`}>\n        <div className=\"card-text\">\n          <p>{this.props.text}</p>\n          {this.props.completed ? <i className=\"fas fa-undo undo-icon\" onClick={this.handleUndo} /> : <i className=\"check-icon fas fa-check\" onClick={this.handleCheck} />}\n          <i className=\"fas fa-trash-alt trash-icon\" onClick={this.handleDelete} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskBox;","import React from 'react';\nimport AddItem from \"./AddItem\";\nimport ItemsCount from \"./ItemsCount\";\nimport TaskBox from \"./TaskBox\";\nimport axios from \"axios\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    tasks: []\n  }\n  componentDidMount(){\n    axios.get('https://7il2iqr3w7.execute-api.eu-west-2.amazonaws.com/dev/tasks')\n    .then((response) => {\n      this.setState({\n        tasks: response.data\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n  addTask = (text) => {\n    const newTask = {\n      taskText: text,\n      completed: false\n    };\n    axios.post('https://7il2iqr3w7.execute-api.eu-west-2.amazonaws.com/dev/tasks', newTask)\n    .then((response) => {\n      newTask.taskId = response.data.insertId;\n      const tasksCopy = this.state.tasks.slice();\n      tasksCopy.push(newTask);\n      this.setState({\n        tasks: tasksCopy\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  deleteTask = id => {\n    const url = \"https://7il2iqr3w7.execute-api.eu-west-2.amazonaws.com/dev/tasks\";\n    axios.delete(`${url}/${id}`)\n    .then((response) => {\n      console.log(response);\n      const filterTask = this.state.tasks.filter(task => {\n        return task.taskId !== id;\n      });\n      this.setState({\n        tasks: filterTask\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  checkTask = id => {\n    const checkTasks = this.state.tasks;\n    let selectedTask = {};\n    checkTasks.forEach(task => {\n      if(task.taskId === id){\n        task.completed = true;\n        selectedTask = task;\n      }\n    });\n    const url = \"https://7il2iqr3w7.execute-api.eu-west-2.amazonaws.com/dev/tasks\";\n    axios.put(`${url}/${id}`, selectedTask)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        tasks: checkTasks \n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  undoTask = id => {\n    const undoTasks = this.state.tasks;\n    let selectedTask = {};\n    undoTasks.forEach(task => {\n      if(task.taskId === id){\n        task.completed = false;\n        selectedTask = task;\n      }\n    });\n    const url = \"https://7il2iqr3w7.execute-api.eu-west-2.amazonaws.com/dev/tasks\";\n    axios.put(`${url}/${id}`, selectedTask)\n    .then((response) => {\n      console.log(response)\n      this.setState({\n        tasks: undoTasks\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  render() {\n    const completedTasks = this.state.tasks.filter(task => task.completed);\n    const incompleteTasks = this.state.tasks.filter(task => !task.completed);\n    const countCompleted = completedTasks.length;\n    const countIncompleted = incompleteTasks.length;\n    return (\n      <section>\n        <h3 className=\"title\">My ToDo List</h3>\n        <AddItem addTaskFunc={this.addTask} />\n        <section className=\"container\">\n          <ItemsCount completed={false} count={countIncompleted} />\n          <div className=\"row\">\n            {incompleteTasks.map(itemIn => {\n              return <TaskBox\n                key={itemIn.taskId} \n                text={itemIn.taskText}  \n                completed={itemIn.completed} \n                deleteTaskFunc={this.deleteTask} \n                checkTaskFunc={this.checkTask} \n                undoTaskFunc={this.undoTask} \n                id={itemIn.taskId}\n              />\n            })}\n          </div>\n        </section>\n        <section className=\"container\">\n          <ItemsCount completed count={countCompleted} /> \n          <div className=\"row\">\n            {completedTasks.map(itemCo => {\n              return <TaskBox key={itemCo.taskId} text={itemCo.taskText} completed={itemCo.completed} deleteTaskFunc={this.deleteTask} checkTaskFunc={this.checkTask} undoTaskFunc={this.undoTask} id={itemCo.taskId}\n            />})}\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}