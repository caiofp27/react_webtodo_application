{"version":3,"sources":["AddItem.js","ItemsCount.js","TaskBox.js","App.js","index.js"],"names":["AddItem","state","newTaskText","updateTaskText","event","setState","target","value","handleClick","e","preventDefault","alert","props","addTaskFunc","className","type","placeholder","this","onChange","maxLength","onClick","React","Component","ItemsCount","completedTask","incompletedTask","completed","id","count","TaskBox","handleDelete","deleteTaskFunc","handleCheck","checkTaskFunc","handleUndo","undoTaskFunc","text","App","tasks","date","uuid","addTask","taskText","newTask","Moment","format","tasksCopy","slice","push","deleteTask","filterTask","filter","task","checkTask","map","undoTask","completedTasks","t","incompleteTasks","countCompleted","length","countIncompleted","item","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0f60c8d.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AddItem extends React.Component {\n  state = {\n    newTaskText: \"\"\n  }\n  updateTaskText = (event) => {\n    this.setState({\n      newTaskText: event.target.value\n    });\n  }\n  handleClick = (e) => {\n    e.preventDefault();\n    if(this.state.newTaskText === \"\"){\n      alert(\"Please add a task first\");\n    }else{\n      this.props.addTaskFunc(this.state.newTaskText);\n      this.setState({\n       newTaskText: \"\" \n      });\n    }\n  }\n  render() {\n    return (\n      <section className=\"container\">\n        <form className=\"form-inline justify-content-center\">\n          <input \n            type=\"text\" \n            className=\"col-6 form-control mr-2\" \n            placeholder=\"New task\"\n            value={this.state.newTaskText}\n            onChange={this.updateTaskText}\n            maxLength=\"70\"\n          />\n          <button className=\"btn btn-sm btn-primary\" onClick={this.handleClick}>\n            ADD\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddItem;","import React from \"react\";\nimport \"./ItemsCount.css\";\n\nclass ItemsCount extends React.Component {\n  completedTask = 0;\n  incompletedTask = 0;\n\n  render() {\n    return (\n      <div>\n        {this.props.completed ? <h4 id=\"title-container\"><i>You have completed {this.props.count} task</i></h4> : <h4 id=\"title-container\"><i>You have {this.props.count} incomplete task</i></h4>}\n      </div>\n    );\n  }\n}\n\nexport default ItemsCount;","import React from \"react\";\nimport \"./TaskBox.css\";\n\nclass TaskBox extends React.Component {\n  handleDelete = e => {\n    this.props.deleteTaskFunc(this.props.id);\n  }\n  handleCheck = e => {\n    this.props.checkTaskFunc(this.props.id);\n  }\n  handleUndo = e => {\n    this.props.undoTaskFunc(this.props.id);\n  }\n  render() {\n    return (\n      <div className={`col-md-3 card box ${this.props.completed ? \"completed-box\" : \"incompleted-box\"}`}>\n        <div className=\"card-text\">\n          <p>{this.props.text}</p>\n          {this.props.completed ? <i className=\"fas fa-undo undo-icon\" onClick={this.handleUndo} /> : <i className=\"check-icon fas fa-check\" onClick={this.handleCheck} />}\n          <i className=\"fas fa-trash-alt trash-icon\" onClick={this.handleDelete} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskBox;","import React from 'react';\nimport uuid from \"uuid/v4\";\nimport AddItem from \"./AddItem\";\nimport ItemsCount from \"./ItemsCount\";\nimport TaskBox from \"./TaskBox\";\nimport Moment from \"moment\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    tasks: [\n      { text: \"Aldus PageMaker including versions of Lorem Ipsum.\", completed: false, date: \"2019-10-16\", id: uuid() },\n      { text: \"Aldus PageMaker including versions of Lorem Ipsum.\", completed: false, date: \"2019-10-17\", id: uuid() },\n      { text: \"Aldus PageMaker including versions of Lorem Ipsum.\", completed: false, date: \"2019-10-15\", id: uuid() },\n      { text: \"Aldus PageMaker including versions of Lorem Ipsum.\", completed: true, date: \"2019-10-20\", id: uuid() },\n      { text: \"Aldus PageMaker including versions of Lorem Ipsum.\", completed: true, date: \"2019-11-06\", id: uuid() }\n    ]\n  }\n  addTask = (taskText) => {\n    const newTask = {\n      text: taskText,\n      completed: false,\n      date: Moment().format('YYYY-MM-DD'),\n      id: uuid()\n    };\n    const tasksCopy = this.state.tasks.slice();\n    tasksCopy.push(newTask);\n    this.setState({\n      tasks: tasksCopy\n    });\n  }\n  deleteTask = id => {\n    const filterTask = this.state.tasks.filter(task => {\n      return task.id !== id;\n    });\n    this.setState({\n      tasks: filterTask\n    });\n  }\n  checkTask = id => {\n    const checkTask = this.state.tasks.map(task => {\n      if(task.id === id){\n        task.completed = true;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: checkTask\n    });\n  }\n  undoTask = id => {\n    const undoTask = this.state.tasks.map(task => {\n      if(task.id === id){\n        task.completed = false;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: undoTask\n    });\n  }\n  render() {\n    const completedTasks = this.state.tasks.filter(t => t.completed === true);\n    const incompleteTasks = this.state.tasks.filter(t => t.completed === false);\n    const countCompleted = completedTasks.length;\n    const countIncompleted = incompleteTasks.length;\n    return (\n      <section>\n        <h3 className=\"title\">My ToDo List</h3>\n        <AddItem addTaskFunc={this.addTask} />\n        <section className=\"container\">\n          <ItemsCount completed={false} count={countIncompleted} />\n          <div className=\"row\">\n            {incompleteTasks.map(item => {\n            return <TaskBox key={item.id} text={item.text} date={item.date} completed={item.completed} deleteTaskFunc={this.deleteTask} checkTaskFunc={this.checkTask} undoTaskFunc={this.undoTask} id={item.id} />})}\n          </div>\n        </section>\n        <section className=\"container\">\n          <ItemsCount completed count={countCompleted} />\n          <div className=\"row\">\n            {completedTasks.map(item => {\n            return <TaskBox key={item.id} text={item.text} date={item.date} completed={item.completed} deleteTaskFunc={this.deleteTask} checkTaskFunc={this.checkTask} undoTaskFunc={this.undoTask} id={item.id} />})}\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}